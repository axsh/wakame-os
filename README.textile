h1{color:green}. Wakame-os

Wakame-os is the Cluster Level Infrastructure Operating System. It is designed to be very simple to handle resources of cluster beyond the different cloud infrastructures. (Amazon EC2, Wakame-vdc, and etc in the future)

h2. Example: Running a remote code

<pre>
<code>
  require 'wakame'
  process = Wakame::Process.setup(:credential => {:user => 'your_name'})
  
  process.fork {
    print "Running code on the remote!\n"
  }
</code>
</pre>

h2. Example: Launch a new instance

<pre>
<code>
  require 'wakame'
  credential = {:user => 'your_name'}
  
  instance = Wakame::SyncRpc('instance')
  instance.create_instances(credential)
</code>
</pre>

h2. Example: Configure instances & launch

You can build "the Hybrid-cloud," and use it in your code.
Difinition of specification have a logical name.

h3. config/cloud_catalog.rb

<pre>
<code>
...(snip)...
  
  cc.credential 'amazon_account' do |c|
    c.access_key        = 'YOUR_ACCESS_KEY'
    c.secret_access_key = 'YOUR_SECRET_ACCESS_KEY'
  end

...(snip)...

  cc.spec 'aws_fedora_core_8' do |s|
    s.credential = 'amazon_account'
    s.driver = 'aws'
    s.requirement do |r|
      r.image_id = 'ami-84db39ed'
    end
  end

...(snip)...
</code>
</pre>

h3. fork_sample.rb

You can use the logical name of specification in your code.

<pre>
<code>
  require 'wakame'
  process = Wakame::Process.setup(:credential => {:user => 'your_name'},
                                  :spec_name => 'aws_fedora_core_8')
  
  process.fork {
    print "Running code on the remote fedora core 8!\n"
  }
</code>
</pre>

h3. instance_sample.rb

<pre>
<code>
  require 'wakame'
  credential = {:user => 'your_name'}
  
  instance = Wakame::SyncRpc('instance')
  instance.create_instances(credential, 'aws_fedora_core_8')
</code>
</pre>

h2. Example: PI calc

<pre>
<code>
  require 'rubygems'
  require 'wakame'
  require 'rational'
  
  credential = { :user => 'yam' }
  
  process = Wakame::Process.setup( :credential => credential,
                                   :spec_name  => 'unknown'
                                   )
  
  queue   = Wakame::Queue.setup
  
  # How many compute?
  dist = 30
  challange = 1000000
  
  dist.times { |no|
    process.fork(no, challange, queue) { |no, challange, queue|
      hit  = 0
  
      total.times {
        x = rand
        y = rand
        hit += 1 if x*x+y*y<1.0
      }
      queue.push [no, Rational(hit, total)]
    }
  }
  
  print "Process were distributed. Waiting results...\n"
  
  rat = 0
  dist.times { |i|
    data = queue.pop
    print "Arrival result #{i+1}/#{dist} from node number. #{data[0]} -> #{data[1]}\n"
    rat += data[1]
  }
  print "Final result. PI = #{(rat * Rational(4, dist)).to_f}\n"
</code>
</pre>

